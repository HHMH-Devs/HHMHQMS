<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="checkImg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>22, 17</value>
  </metadata>
  <data name="checkImg.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAo
        BgAAAk1TRnQBSQFMAwEBAAEQAQABEAEAAR4BAAEeAQAE/wERAQAI/wFCAU0BNgcAATYDAAEoAwABeAMA
        AR4DAAEBAQABEAUAASABHP8A/wD/AOcAAVoBewEpAX0BxgF8AXMBegH/AX/kAAH3AXoBAAF8AQABfAEA
        AXwBAAF8AWsBeQH/AX/gAAH3AXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBawF5Af8Bf9wAAfcBegEA
        AXwBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/AX/YAAH3AXoBAAF8AQABfAEAAXwBAAF8
        AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/AX/UAAH3AXoBAAF8AQABfAEAAXwBAAF8AQABfAEA
        AXwBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBawF5Af8Bf9AAAfcBegEAAXwBAAF8AQABfAEAAXwBAAF8
        AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/AX/MAAH3AXoBAAF8AQABfAEA
        AXwBAAF8AQABfAEAAXwBAAF8AcYBfAEQAXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/
        AX/IAAH3AXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AcYBfAHeAX8B/wF/ATEBegEAAXwBAAF8
        AQABfAEAAXwBAAF8AQABfAEAAXwBawF5Af8Bf8QAATkBewEAAXwBAAF8AQABfAEAAXwBAAF8AQABfAEA
        AXwBxgF8Ad4BfwQAAf8BfwExAXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/AX/CAAHG
        AXwBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBxgF8Ad4BfwgAAf8BfwExAXoBAAF8AQABfAEAAXwBAAF8
        AQABfAEAAXwBAAF8AWsBeQH/AX/AAAEhAXwBAAF8AQABfAEAAXwBAAF8AQABfAHGAXwB3gF/DAAB/wF/
        ATEBegEAAXwBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBawF5Af8Bf74AAc4BeQEAAXwBAAF8AQABfAEA
        AXwBxgF8Ad4BfxAAAf8BfwExAXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/AX+8AAHe
        AX8BKQF9AQABfAEAAXwBKQF9Ad4BfxQAAf8BfwExAXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8
        AWsBeQH/AX+8AAH/AX8BvQF/Ab0BfwH/AX8YAAH/AX8BMQF6AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8
        AQABfAFrAXkB/wF/3AAB/wF/ATEBegEAAXwBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBawF5Af8Bf9wA
        Af8BfwExAXoBAAF8AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8AWsBeQH/AX/cAAH/AX8BMQF6AQABfAEA
        AXwBAAF8AQABfAEAAXwBAAF8AQABfAFSAXreAAH/AX8BMQF6AQABfAEAAXwBAAF8AQABfAEAAXwBAAF8
        AUIBfOAAAf8BfwExAXoBAAF8AQABfAEAAXwBAAF8AQABfAGEAXziAAH/AX8BMQF6AQABfAEAAXwBAAF8
        AQABfAG1AXrkAAH/AX8B1gF6AQgBfQEIAX0B1gF6Af8Bf/8A/wD/AP8AeAABQgFNAT4HAAE+AwABKAMA
        AXgDAAEeAwABAQEAAQEFAAHgAQEWAAP/AQAD/wH8DAAD/wH8DAAD/wH8DAAD/wH8DAAB/wGDAf8B/AwA
        Af8BAQH/AfwMAAH+AQAB/wH8DAAB/AEAAX8B/AwAAfgBAAE/AfwMAAHwAQABHwH8DAAB4AEAAQ8B/AwA
        AcABAAEHAfwMAAGAAQABAwH8DQABMAEBAfwNAAF4AQAB/A0AAfwBAAF8DAABAQH+AQABPAwAAQMB/wEA
        ARwMAAGHAf8BgAEMDAAC/wHAAQQMAAL/AeANAAL/AfANAAL/AfgNAAL/AfwNAAL/Af4NAAP/DQAD/wH8
        DAAD/wH8DAAD/wH8DAAD/wH8DAAL
</value>
  </data>
</root>